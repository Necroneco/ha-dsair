from ds_air_service.display import display
from ds_air_service.decoder import decoder

list = [
    # '0212000d000000010000000000000000001000000103',
    # '0212000d000000010000000000000000001000000103',
    # 0227000d000000668dc85100000000000001a0 1500 0211000d000000020000000000000000000100020303'
    # '0211000d0000000200000000000000000001000203',
    # 0285000d000000688dc85100000000000001a0 7300 026f000d0000000200000000000000000050000830322e31302e303000601803096b3b0d3139322e3136382e312e3231330d3235352e3235352e3235352e300b3139322e3136382e312e310b3139322e3136382e312e310f3131342e3131342e3131342e31313407e6070b0b1709360000000303
    # '026f000d0000000200000000000000000050000830322e31302e303000601803096b3b0d3139322e3136382e312e3231330d3235352e3235352e3235352e300b3139322e3136382e312e310b3139322e3136382e312e310f3131342e3131342e3131342e31313407e6070b0b17093600000003',
    # 0229000d0000000600000000000000000101a01700 0213000d00010005000000000000000001300001ffff0303
    # '0211000d0000000500000000000000000001000203', 

    #   长度      子体版本 自增命令 devTyp devId ack cmdId
    # '02 2f01 0d00 0100 05000000 00 00000000 00 3000',
    # 0600 设备数
    # 06 房间数

    # 0200 roomID
    # 03
    # 04 312d3031
    # 06 e9a490e58e85
    # 08 382d34302e706e67
    # 0100 deviceCount
    # 17000000 0100
    # 
    # 04 312d3031
    # 04 c09dc011
    # 
    # 0300
    # 03
    # 04312d303206e5aea2e58e8508382d34352e706e67010017000000010004312d303204ffffffff04000304312d303306e5aea2e58da708382d35312e706e67010017000000010004312d303304ffffffff05000304312d303406e4b8bbe58da708382d34372e706e67010017000000010004312d303404ffffffff06000304312d303506e4b9a6e688bf08382d35302e706e67010017000000010004312d303504ffffffff2100030b73656e736f72736b6974320ce79b91e6b58be4b8ade5bf8308382d33332e706e6701001900000001000c3463313161653938623664630fe5aea2e58e85e4bca0e6849fe599a803',

    '0211000d0000000500000000000000000001000203022f010d00010005000000000000000000300006000602000304312d303106e9a490e58e8508382d34302e706e67010017000000010004312d303104c09dc01103000304312d303206e5aea2e58e8508382d34352e706e67010017000000010004312d303204ffffffff04000304312d303306e5aea2e58da708382d35312e706e67010017000000010004312d303304ffffffff05000304312d303406e4b8bbe58da708382d34372e706e67010017000000010004312d303404ffffffff06000304312d303506e4b9a6e688bf08382d35302e706e67010017000000010004312d303504ffffffff2100030b73656e736f72736b6974320ce79b91e6b58be4b8ade5bf8308382d33332e706e6701001900000001000c3463313161653938623664630fe5aea2e58e85e4bca0e6849fe599a803',
]


def show(s):
    if s[0] == 'D':
        s = s[6:]
    print(s)
    b = bytes.fromhex(s)
    while b:
        r, b = decoder(b)
        print(display(r))

for i in list:
    show(i)

import socket

def connect():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(("192.168.1.213", 8008))
    s.sendall(bytes.fromhex("0210000d0001000100000000000000000100a003"))
    s.sendall(bytes.fromhex("0213000d00010005000000000000000001300001ffff03"))
    "0x02 1300 0d00 0100 05000000 000000000001300001ffff03"
    "0x02 1300 0d00 0100 02000000 000000000001300001ffff03"
    while (True):
        data = s.recv(1024)
        print("0x"+data.hex())

# connect()